name: build

on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:
    branches:
      - 'master'

permissions:
  contents: read

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/ambula

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50
          # working-directory: src

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"

      - name: Test
        run: go test ./...

  vuln-deps-check:
    name: vuln-deps-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          format: "table"
          ignore-unfixed: true
          exit-code: "1"
          severity: "CRITICAL,HIGH"

  docker:
    name: docker
    runs-on: ubuntu-latest
    needs: [lint, test, vuln-deps-check]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@master
        with:
          dockerfile: "Dockerfile"

      - name: Docker tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          tags: ${{ env.IMAGE_NAME }}:test

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:test
          format: "table"
          ignore-unfixed: true
          exit-code: "1"
          severity: "CRITICAL,HIGH"

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
